extends layout-admin

block content
  .main-panel
    .container
      .panel-header.bg-primary-gradient
        div(style="padding:5px 20px 0px 20px;")
          .d-flex.align-items-left.align-items-md-center.flex-column.flex-md-row
            div
              h2.text-white.fw-bold View All Followups
              h5.text-white.op-7.mb-2 Welcome to Admin Panel
            .ml-md-auto.py-2.py-md-0
              a.btn.btn-white.btn-border.btn-round.mr-2(href='/admin/dashboard') Dashboard
      .page-inner
        .row
          .col-md-12
            .card.card-with-nav.filter-div
              .card-body(style="padding:0px 15px !important")
                .row
                  .col-md-3
                    .form-group
                      label(for='type',style="margin-bottom:0px;") Search
                      input.form-control#searchbox(type='text' placeholder='By ID, Name, Number, Email..' name='search' style='height: 38px;')
                      a#clr_search(href="javascript:void(0)" style="margin-top: 3px;float: right;text-decoration: none;z-index:9999")
                        i.fa.fa-times(style="position: absolute;right: 35px;top: 45px;z-index: 99999;")
                  .col-md-3
                    .form-group
                      label(for='type' style="width: 100%;margin-bottom:0px;") Date Range
                      input#date.form-control(type='text' name="date_range" value="" readonly style="height:40px !important")
                      a#clr_date_range(href="javascript:void(0)" style="margin-top: 3px;float: right;text-decoration: none;z-index:9999")
                        i.fa.fa-times(style="position: absolute;right: 35px;top: 42px;z-index: 99999;")
                  .col-md-3
                    .form-group
                      label(for='stage',style="margin-bottom:0px;") Lead Stage
                      select#stage(name='stage' data-container="body" data-live-search="true" ).selectpicker
                        option(value='') Select Stage
                        option(value="New Lead") 1. New Lead
                        option(value="Enquiry Received") 2. Enquiry Received
                        option(value="Tour Booked") 3. Tour Booked
                        option(value="Closed-Lead Lost") 4. Closed-Lead Lost
                        option(value="Post Tour") 5. Post Tour
                        option(value="Closed-Enquiry Lost") 6. Closed-Enquiry Lost
                        option(value="Closed - Won") 7. Closed - Won
                  .col-md-3
                    .form-group.lead-flex-container
                      button.btn.btn-primary#show_filter(type="button" style='margin-top:20px;margin-left:-40px;')
                        i.fa.fa-filter
                        |  Additional Filter
                      button.btn.btn-primary#clear_filter(type="button" style='margin-top:20px;')
                        i.fa.fa-times
                        |  Clear Filter
                        //- | Additional Filter
                .row.filter
                  .col-md-3(style="margin-top: -10px;")
                    .form-group
                      label(for='country',style="margin-bottom:-8px;") Country
                      select#country(name='country[]' multiple='multiple' data-container="body" data-live-search="true" data-actions-box="true" data-selected-text-format="count > 1").selectpicker
                        each country in data.countries
                          option(value=country._id) #{country.country_name}
                  .col-md-3(style="margin-top: -10px;")
                    .form-group
                      label(for='source_category',style="margin-bottom:0px;") Zone
                      br
                      select#zone(name='zone[]' multiple='multiple' data-container="body" data-live-search="true" data-actions-box="true" data-selected-text-format="count > 1").selectpicker
                        each zone in data.zones
                          option(value=zone._id) #{zone.name}
                  .col-md-3(style="margin-top: -10px;")
                    .form-group
                      label(for='center',style="margin-bottom:0px;") Center
                      select#center(name='center[]' multiple='multiple' data-container="body" data-live-search="true" data-actions-box="true" data-selected-text-format="count > 1").selectpicker
                        each center in data.centers
                          option(value=center._id) #{center.school_display_name}
                  .col-md-3(style="margin-top: -10px;")
                    .form-group
                      label(for='program',style="margin-bottom:0px;") Program
                      select#program(name='program[]' multiple='multiple' data-container="body" data-live-search="true" data-actions-box="true" data-selected-text-format="count > 1").selectpicker
                        each program in programs
                          option(value=program._id) #{program.program_name}
                  .col-md-3(style="margin-top: -10px;")
                    .form-group
                      label(for='source_category',style="margin-bottom:0px;") Source Category
                      select#source_category(name='source_category' data-container="body" data-live-search="true" ).selectpicker
                        option(value='') Select Source Category
                        option(value="direct-walk-in") Direct Walk in
                        option(value="digital-lead") Digital Lead
                        option(value="database/events") Database/Events
                  .col-md-3(style="margin-top: -10px;")
                    .form-group
                      label(for='know_us',style="margin-bottom:0px;") Lead Source
                      select#know_us(name='know_us[]' multiple='multiple' data-container="body" data-live-search="true" data-actions-box="true" data-selected-text-format="count > 1").selectpicker
                        each knowus in knowuss
                          option(value=knowus.name) #{knowus.name}
                  .col-md-3(style="margin-top: -10px;")
                    .form-group
                      label(for='status',style="margin-bottom:0px;") Status
                      select#status(name='status[]' multiple='multiple' data-container="body" data-live-search="true" data-actions-box="true" data-selected-text-format="count > 1").selectpicker
                        each statuses in statusess
                          option(value=statuses._id) #{statuses.name}
                  .col-md-3
                    .form-group
                      .form-check
                        label.form-check-label
                          input.form-check-input.searchInput(type='checkbox' name='no_followup' id="no_followup_1" )
                          span.form-check-sign Leads with NO Follow-up dates
                  .col-md-3
                    .form-group
                      .form-check
                        label.form-check-label
                          input.form-check-input.searchInput(type='checkbox' name='someday' id="someday_1" )
                          span.form-check-sign Leads with Someday Follow-up dates
                  .col-md-3(style="margin-top:25px;")
                    button.excelexport.btn-primary-wrapper(type="button" style="float: left;")
                hr
                .table-responsive
                  .col-sm-12
                    table#basic-datatables.display.table.table-striped.table-hover.dataTable(role='grid', aria-describedby='basic-datatables_info')
                      thead
                        tr(role='row')
                          th Lead ID
                          th Updated on
                          th Due in
                          th Lead Name
                          th Source
                          th Program
                          if user_type
                            th School
                          else
                            th Child Name
                          th Stage
                          th Status
                          th Action
                      tbody
                .row
  block script
    script(type='text/javascript' src='https://cdn.jsdelivr.net/momentjs/latest/moment.min.js')
    script(type='text/javascript' src='https://cdn.jsdelivr.net/npm/daterangepicker/daterangepicker.min.js')


    script(type='text/javascript' src='https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/js/bootstrap-select.min.js')
    link(rel="stylesheet", href="https://cdn.jsdelivr.net/npm/bootstrap-select@1.13.14/dist/css/bootstrap-select.min.css")


  script.
    $('.filter').css('display', 'none');
    var currentUser = !{JSON.stringify(session.user)};
    var onlyUserEntry = !{JSON.stringify(user_type)};
    var permissionEdit = !{JSON.stringify(permissionEditLead)};
    var permissionAddFollow = !{JSON.stringify(permissionAddFollowUp)};
    var data = !{JSON.stringify(data)};

    $(document).ready(function() {
      // Customize relative time format
      moment.updateLocale('en', {
        relativeTime: {
          future: 'in %s',
          past: '%s ago',
          s: 'a few seconds',
          ss: '%d seconds',
          m: 'a minute',
          mm: '%d minutes',
          h: 'an hour',
          hh: '%d hours',
          d: 'a day',
          dd: '%d days',
          M: 'a month',
          MM: '%d months',
          y: 'a year',
          yy: '%d years'
        }
      });
      var next = 0;
      var table = $('#basic-datatables').DataTable({
        bProcessing: true,
        bServerSide: true,
        pagination: true,
        ordering: true,
        //- dom: 'Bfrtip',
        order: [[2, 'desc']],
        buttons: [{
            extend: 'excel',
            text: 'Export to excel',
            className: 'btn btn-primary exp_btn',
            title: `followups_${Date.now()}`,
            exportOptions: {
              columns: [0, 1, 2, 3, 4, 5, 6]
            }
          }
        ],
        sAjaxSource: "/admin/lead/datatablefollowup",
        rowCallback: function (row, data, index) {
          if (data.is_external === 2) {
            $(row).addClass('new-mail-leads-dup');
          }
          // duplicate lead
          if (data.is_dup == 1) {
            if (data.dup_no == 1) {
              $(row).addClass('dup-leads-1');
            } else if (data.dup_no == 2) {
              $(row).addClass('dup-leads-2');
            } else if (data.dup_no == 3) {
              $(row).addClass('dup-leads-3');
            } else if (data.dup_no == 4) {
              $(row).addClass('dup-leads-4');
            } else if (data.dup_no == 5) {
              $(row).addClass('dup-leads-5');
            } else if (data.dup_no == 6) {
              $(row).addClass('dup-leads-6');
            } else if (data.dup_no == 7) {
              $(row).addClass('dup-leads-7');
            } else if (data.dup_no == 8) {
              $(row).addClass('dup-leads-8');
            } else if (data.dup_no == 9) {
              $(row).addClass('dup-leads-9');
            } else if (data.dup_no == 10) {
              $(row).addClass('dup-leads-10');
            } else if (data.dup_no == 11) {
              $(row).addClass('dup-leads-11');
            } else if (data.dup_no == 12) {
              $(row).addClass('dup-leads-12');
            } else if (data.dup_no == 13) {
              $(row).addClass('dup-leads-13');
            } else if (data.dup_no == 14) {
              $(row).addClass('dup-leads-14');
            } else if (data.dup_no == 15) {
              $(row).addClass('dup-leads-15');
            } else {
              $(row).addClass('dup-leads-15');
            }
          }
        },
        columns: [
            {
              data: 'lead_no',
              bSortable: false,
              render: function (data, type, row) {
                return `${onlyUserEntry || permissionEdit ? `<a href="javascript:void(0)" onclick="redirectToEditleed('${row._id}')">${data}</a>` : data}`
              },
            },
            {
              data: 'updatedAt',
              render: function (data, type, row) {
                return `${data ? moment(data).format("MM/DD/YYYY") : 'Not Provided'}`
              }
            },
            //- {
            //-   data: 'follow_due_date',
            //-   render: function (data, type, row) {
            //-     console.log(data);
            //-     console.log(moment(data).format("MM/DD/YYYY") === moment().format("MM/DD/YYYY"))
            //-     let dueDate = moment(data).format("MM/DD/YYYY");

            //-     if (moment(data).format("MM/DD/YYYY") === moment().format("MM/DD/YYYY")) {
            //-       // date matched
            //-       console.log(moment(`${dueDate} ${row.follow_due_time}`).fromNow())
            //-     } else {
            //-       // date not matched
            //-       console.log(moment(`${dueDate} ${row.follow_due_time}`).fromNow())
            //-     }
            //-     console.log(row.follow_due_time)
            //-     var now = moment();
            //-     var end = moment(data); // another date
            //-     var duration = moment.duration(end.diff(now));
            //-     return `${data ? (duration.days() > 0 ?  "In "+ duration.days() + " days & " + duration.hours() + " hours " :  (Math.abs(duration.days()) == 0 ? "" : Math.abs(duration.days()) + " days & ")  + Math.abs(duration.hours()) + " hours ago") : 'Not Provided'}`
            //-   }
            //- },
            {
              data: 'follow_due_date',
              render: function (data, type, row) {
                //- console.log(data);
                var regex = /\ba\b/;
                let dueDate = moment(data).format("MM/DD/YYYY");
                if (row.follow_due_date) {
                  if (row.follow_due_time) {
                    var mainData = moment(`${dueDate} ${row.follow_due_time}`).fromNow();
                    if (regex.test(mainData)) {
                      mainData = mainData.replace("a", 1)
                    }
                    return `${data ? mainData : "Not Provided"}`
                  } else {
                    var mainData = moment(`${data}`).fromNow();
                    if (regex.test(mainData)) {
                      mainData = mainData.replace("a", 1)
                    }
                    return `${data ? mainData : "Not Provided"}`
                  }
                } else {
                  return "Not Provided";
                }
              }
            },
            {
              data: 'parent_name',
              render: function (data, type, row) {
                return `${data ? data : 'Not Provided'}`
              }
            },
            {
              data: 'source_category',
              render: function (data, type, row) {
                return `${data ? data : 'Not Provided'}`
              }
            },
            {
              data: 'program_id.program_name',
              render: function (data, type, row) {
                return `${data ? data : 'Not Provided'}`
              }
            },
            {
              data: `${onlyUserEntry ? 'school_id.school_display_name' : 'child_first_name'}`,
              render: function (data, type, row) {
                return `${onlyUserEntry ? data : `${data} ${row.child_last_name}`}`
              }
            },
            {
              data: 'stage',
              render: function (data, type, row) {
                if (data == "New Lead") {
                  return `
                   1. New Lead
                  `;
                } else if (data == "Enquiry Received") {
                  return `
                   2. Enquiry Received
                  `;
                } else if (data == "Tour Booked") {
                  return `
                    3. Tour Booked
                  `;
                } else if (data == "Closed-Lead Lost") {
                  return `
                    4. Closed-Lead Lost
                  `;
                } else if (data == "Post Tour") {
                  return `
                    5. Post Tour
                  `;
                } else if (data == "Closed-Enquiry Lost") {
                  return `
                    6. Closed-Enquiry Lost
                  `;
                } else if (data == "Closed - Won") {
                  return `
                    7. Closed - Won
                  `;
                } else {
                  return data;
                }
              }
            },
            {
              data: 'status_id.name',
              render: function (data, type, row) {
                return `${data ? data : 'Not Provided'}`
              }
            },
            {
              data: `_id`,
              bSortable: false,
              render: function (data, type, row) {
                return `${onlyUserEntry || permissionAddFollow ? `<button type="button" class="btn btn-link btn-primary" data-toggle="tooltip" title="followup" data-original-title="Edit timesheet" onclick="redirectToEditleed2('${data}')"><i class="fa fa-plus" style="font-size: 17px;"></i></button>` : ''}`
              }
            }
        ],
        fnServerParams: function ( data ) {
            var searchCount = 0;
            $(".searchInput").each(function(){
              //- alert($(this).is(":checked"));
                data.push( { "name": "Searchkey_"+searchCount, "value": $(this).is(":checked") } );
                searchCount++;
            });
            data.push({
                "name": "country",
                "value": $('#country').val()
            });
            data.push({
                "name": "zone",
                "value": $('#zone').val()
            });
            data.push({
                "name": "center",
                "value": $('#center').val()
            });
            data.push({
                "name": "status",
                "value": $('#status').val()
            });
            data.push({
                "name": "program",
                "value": $('#program').val()
            });
            data.push({
                "name": "know_us",
                "value": $('#know_us').val()
            });
            data.push({
                "name": "stage",
                "value": $('#stage').val()
            });
        }
      });
      if(currentUser.main == "super_admin"){

        $(document).on('change', '#country', function () {
          var id = $(this).val();
           let countriesList = $("#country option").length;
          var id = $(this).val();
          var valueLength = $(this).val() ? $(this).val().length : 0;
          if (countriesList == valueLength) {
            $('#sel_country_check').prop('checked',true);
          } else {
            $('#sel_country_check').prop('checked',false);
          }
          $('#sel_center_check').prop('checked',false);
          $('#sel_zone_check').prop('checked',false);
          console.log(id,"idddddd")
          $("#clr_zone").css('visibility', 'hidden');
          $("#clr_center").css('visibility', 'hidden');
          if(id){
            console.log("id")
            $("#zone").val("");
            $("#center").val("");
            //- $('#zone').val('');
            //- $('#center').val('');
            $.ajax({
              method: 'POST',
              url: `/admin/lead/zonefilter`,
              data: {
                type: id
              },
              dataType: 'json',
              success: function (response) {
                //- console.log(response,"response")

                $("#zone").html("");
                $("#center").html("");
                //- $("#program").append(`<option value=''>Select Program</option>`);

                var len = response.data.length;
                for (var i = 0; i < len; i++) {
                  var id = response.data[i]['_id'];
                  var zone_name = response.data[i]['name'];
                  $("#zone").append(`<option value='${id}'>${zone_name}</option>`);

                }
                for(var i = 0; i < response.centers.length; i++) {
                  var id = response.centers[i]['_id'];
                  var center_name = response.centers[i]['school_display_name'];
                  $("#center").append(`<option value='${id}'>${center_name}</option>`);
                }
                $("#zone").selectpicker("refresh");
                $("#center").selectpicker("refresh");
              }
            });
          }else{
            console.log("no id")
            $("#zone").html("");
            $("#center").html("");
            $("#clr_zone").css('visibility', 'hidden');
            $("#clr_center").css('visibility', 'hidden');
            $("#clr_country").css('visibility', 'hidden');
            for (var i = 0; i < data.zones.length; i++) {
              //- console.log(data.zones[i])
              var id = data.zones[i]['_id'];
              var zone_name = data.zones[i]['name'];
              //- console.log(id,"id")
              //- console.log(zone_name,"zone_name")
              $("#zone").append(`<option value='${id}'>${zone_name}</option>`);
            }
            for (var i = 0; i < data.centers.length; i++) {
              //- console.log(data.centers[i])
              var id = data.centers[i]['_id'];
              var center_name = data.centers[i]['school_display_name'];
              //- console.log(id,"id")
              //- console.log(zone_name,"zone_name")
              $("#center").append(`<option value='${id}'>${center_name}</option>`);
            }
            $("#zone").selectpicker("refresh");
            $("#center").selectpicker("refresh");
          }
        });
        $('#clr_country').click(function(e) {
          $("#zone").val("");
          $("#center").val("");
          $("#clr_zone").css('visibility', 'hidden');
          $("#clr_center").css('visibility', 'hidden');
          $('#sel_country_check').prop('checked',false);
          $('#sel_zone_check').prop('checked',false);
          $('#sel_center_check').prop('checked',false);
          for (var i = 0; i < data.zones.length; i++) {
              //- console.log(data.zones[i])
            var id = data.zones[i]['_id'];
            var zone_name = data.zones[i]['name'];
            //- console.log(id,"id")
            //- console.log(zone_name,"zone_name")
            $("#zone").append(`<option value='${id}'>${zone_name}</option>`);
          }
          for (var i = 0; i < data.centers.length; i++) {
            //- console.log(data.centers[i])
            var id = data.centers[i]['_id'];
            var center_name = data.centers[i]['school_display_name'];
            //- console.log(id,"id")
            //- console.log(zone_name,"zone_name")
            $("#center").append(`<option value='${id}'>${center_name}</option>`);
          }
        });
        $(document).on('change', '#zone', function () {
          let zonesList = $("#zone option").length;
          var id = $(this).val();
          var valueLength = $(this).val() ? $(this).val().length : 0;
          if (zonesList == valueLength) {
            $('#sel_zone_check').prop('checked',true);
          } else {
            $('#sel_zone_check').prop('checked',false);
          }
          $('#sel_center_check').prop('checked',false);
          //- $('#sel_zone_check').prop('checked',false);
          $("#center").val("");

          $("#clr_center").css('visibility', 'hidden');
          if(id){
            console.log("id")
            $.ajax({
              method: 'POST',
              url: `/admin/lead/centerfilter`,
              data: {
                type: id
              },
              dataType: 'json',
              success: function (response) {
                $("#center").html("");
                var len = response.data.length;
                for (var i = 0; i < len; i++) {
                  var id = response.data[i]['_id'];
                  var school_name = response.data[i]['school_display_name'];
                  $("#center").append(`<option value='${id}'>${school_name}</option>`);
                }
                $("#center").selectpicker("refresh")
              }
            });
          }else{
            console.log("no id")
            $("#center").val("");
            $("#clr_zone").css('visibility', 'hidden');
            for (var i = 0; i < data.centers.length; i++) {
              //- console.log(data.centers[i])
              var id = data.centers[i]['_id'];
              var center_name = data.centers[i]['school_display_name'];
              //- console.log(id,"id")
              //- console.log(zone_name,"zone_name")
              $("#center").append(`<option value='${id}'>${center_name}</option>`);
            }
          }
          //- $.ajax({
          //-   method: 'POST',
          //-   url: `/admin/lead/centerfilter`,
          //-   data: {
          //-     type: id
          //-   },
          //-   dataType: 'json',
          //-   success: function (response) {
          //-     //- console.log(response,"response")

          //-     $("#center").val("");
          //-     //- //- $("#program").append(`<option value=''>Select Program</option>`);

          //-     var len = response.data.length;
          //-     for (var i = 0; i < len; i++) {
          //-       var id = response.data[i]['_id'];
          //-       var school_name = response.data[i]['school_display_name'];
          //-       $("#center").append(`<option value='${id}'>${school_name}</option>`);

          //-     }
          //-     //- // $(".testi_class").select2("refresh");
          //-   }
          //- });
        });
        $('#clr_zone').click(function(e) {
          $("#center").val("");
          $("#clr_center").css('visibility', 'hidden');
          $('#sel_zone_check').prop('checked',false);
          $('#sel_center_check').prop('checked',false);
          for (var i = 0; i < data.centers.length; i++) {
            //- console.log(data.centers[i])
            var id = data.centers[i]['_id'];
            var center_name = data.centers[i]['school_display_name'];
            //- console.log(id,"id")
            //- console.log(zone_name,"zone_name")
            $("#center").append(`<option value='${id}'>${center_name}</option>`);
          }
        });
      }else{
        $(document).on('change', '#country', function () {
          let countriesList = $("#country option").length;
          var id = $(this).val();
          var valueLength = $(this).val() ? $(this).val().length : 0;
          if (countriesList == valueLength) {
            $('#sel_country_check').prop('checked',true);
          } else {
            $('#sel_country_check').prop('checked',false);
          }
          $('#sel_center_check').prop('checked',false);
          $('#sel_zone_check').prop('checked',false);
          console.log(id,"idddddd")
          $("#clr_zone").css('visibility', 'hidden');
          $("#clr_center").css('visibility', 'hidden');
          if(id){
            console.log("id")
            $("#zone").val("");
            $("#center").val("");
            $("#clr_zone").css('visibility', 'hidden');
            $("#clr_center").css('visibility', 'hidden');
            //- $("#clr_country").css('visibility', 'hidden');
            for (var i = 0; i < data.zones.length; i++) {
              //- console.log(data.zones[i])
              var id = data.zones[i]['_id'];
              var zone_name = data.zones[i]['name'];
              //- console.log(id,"id")
              //- console.log(zone_name,"zone_name")
              $("#zone").append(`<option value='${id}'>${zone_name}</option>`);
            }
            for (var i = 0; i < data.centers.length; i++) {
              //- console.log(data.centers[i])
              var id = data.centers[i]['_id'];
              var center_name = data.centers[i]['school_display_name'];
              //- console.log(id,"id")
              //- console.log(zone_name,"zone_name")
              $("#center").append(`<option value='${id}'>${center_name}</option>`);
            }
          }else{
            console.log("no id")
            $("#zone").val("");
            $("#center").val("");
            $("#clr_zone").css('visibility', 'hidden');
            $("#clr_center").css('visibility', 'hidden');
            $("#clr_country").css('visibility', 'hidden');
            for (var i = 0; i < data.zones.length; i++) {
              //- console.log(data.zones[i])
              var id = data.zones[i]['_id'];
              var zone_name = data.zones[i]['name'];
              //- console.log(id,"id")
              //- console.log(zone_name,"zone_name")
              $("#zone").append(`<option value='${id}'>${zone_name}</option>`);
            }
            for (var i = 0; i < data.centers.length; i++) {
              //- console.log(data.centers[i])
              var id = data.centers[i]['_id'];
              var center_name = data.centers[i]['school_display_name'];
              //- console.log(id,"id")
              //- console.log(zone_name,"zone_name")
              $("#center").append(`<option value='${id}'>${center_name}</option>`);
            }
          }

          //- $("#zone").val("");
          //- $("#center").val("");
          //- $.ajax({
          //-   method: 'POST',
          //-   url: `/admin/lead/zonefilter`,
          //-   data: {
          //-     type: id
          //-   },
          //-   dataType: 'json',
          //-   success: function (response) {
          //-     //- console.log(response,"response")

          //-     $("#zone").val("");
          //-     $("#center").val("");
          //-     //- $("#program").append(`<option value=''>Select Program</option>`);

          //-     var len = response.data.length;
          //-     for (var i = 0; i < len; i++) {
          //-       var id = response.data[i]['_id'];
          //-       var zone_name = response.data[i]['name'];
          //-       $("#zone").append(`<option value='${id}'>${zone_name}</option>`);

          //-     }
          //-     // $(".testi_class").select2("refresh");
          //-   }
          //- });
        });
        $('#clr_country').click(function(e) {
          $("#zone").val("");
          $("#center").val("");
          $("#clr_zone").css('visibility', 'hidden');
          $("#clr_center").css('visibility', 'hidden');
          $('#sel_country_check').prop('checked',false);
          $('#sel_zone_check').prop('checked',false);
          $('#sel_center_check').prop('checked',false);
          for (var i = 0; i < data.zones.length; i++) {
              //- console.log(data.zones[i])
            var id = data.zones[i]['_id'];
            var zone_name = data.zones[i]['name'];
            //- console.log(id,"id")
            //- console.log(zone_name,"zone_name")
            $("#zone").append(`<option value='${id}'>${zone_name}</option>`);
          }
          for (var i = 0; i < data.centers.length; i++) {
            //- console.log(data.centers[i])
            var id = data.centers[i]['_id'];
            var center_name = data.centers[i]['school_display_name'];
            //- console.log(id,"id")
            //- console.log(zone_name,"zone_name")
            $("#center").append(`<option value='${id}'>${center_name}</option>`);
          }
        });
        $(document).on('change', '#zone', function () {
          var id = $(this).val();
          console.log(id,"zone");
          let zonesList = $("#zone option").length;
          var id = $(this).val();
          var valueLength = $(this).val() ? $(this).val().length : 0;
          if (zonesList == valueLength) {
            $('#sel_zone_check').prop('checked',true);
          } else {
            $('#sel_zone_check').prop('checked',false);
          }
          //- $("#center").val("");
          $('#sel_center_check').prop('checked',false);

          $("#clr_center").css('visibility', 'hidden');
          //- $("#center").val("");
          //- for (var i = 0; i < data.centers.length; i++) {
          //-     //- console.log(data.centers[i])
          //-     var id = data.centers[i]['_id'];
          //-     var center_name = data.centers[i]['school_display_name'];
          //-     //- console.log(id,"id")
          //-     //- console.log(zone_name,"zone_name")
          //-     $("#center").append(`<option value='${id}'>${center_name}</option>`);
          //-   }
          if(id){
            console.log("isdsd")
            $("#center").val("");
            for (var i = 0; i < data.centers.length; i++) {
              //- console.log(data.centers[i])
              var center_id = data.centers[i]['_id'];
              var center_name = data.centers[i]['school_display_name'];
              var zone_id = data.centers[i]['zone_id'];
              console.log(zone_id,"id")
              //- console.log(zone_name,"zone_name")
              if(id.includes(zone_id)){
                console.log(center_name,"center_namecenter_namecenter_name")
                $("#center").append(`<option value='${center_id}'>${center_name}</option>`);
              }
            }
          }else{
            console.log("no id")
            $("#center").val("");
            $("#clr_zone").css('visibility', 'hidden');
            for (var i = 0; i < data.centers.length; i++) {
              //- console.log(data.centers[i])
              var id = data.centers[i]['_id'];
              var center_name = data.centers[i]['school_display_name'];
              //- console.log(id,"id")
              //- console.log(zone_name,"zone_name")
              $("#center").append(`<option value='${id}'>${center_name}</option>`);
            }
          }
        });
        $('#clr_zone').click(function(e) {
          $("#center").val("");
          $("#clr_center").css('visibility', 'hidden');
          $('#sel_zone_check').prop('checked',false);
          $('#sel_center_check').prop('checked',false);
          //- $('#sel_z_check').prop('checked',false);
          for (var i = 0; i < data.centers.length; i++) {
            //- console.log(data.centers[i])
            var id = data.centers[i]['_id'];
            var center_name = data.centers[i]['school_display_name'];
            //- console.log(id,"id")
            //- console.log(zone_name,"zone_name")
            $("#center").append(`<option value='${id}'>${center_name}</option>`);
          }
        });
      }
      $(document).on('change', '#status', function () {
         let statusList = $("#status option").length;
          var id = $(this).val();
          var valueLength = $(this).val() ? $(this).val().length : 0;
          if (statusList == valueLength) {
            $('#sel_status_check').prop('checked',true);
          } else {
            $('#sel_status_check').prop('checked',false);
          }

          if(!id){
            $("#clr_status").css('visibility', 'hidden');
          }
      })
      $(document).on('change', '#program', function () {
          var id = $(this).val();
          if(!id){
            $("#clr_program").css('visibility', 'hidden');
          }
      })
      $(document).on('change', '#center', function () {
          var id = $(this).val();
          if(!id){
            $("#clr_center").css('visibility', 'hidden');
          }
      })
      $(document).on('change', '#know_us', function () {
         let knowList = $("#know_us option").length;
          var id = $(this).val();
          var valueLength = $(this).val() ? $(this).val().length : 0;
          if (knowList == valueLength) {
            $('#sel_know_check').prop('checked',true);
          } else {
            $('#sel_know_check').prop('checked',false);
          }

          if(!id){
            $("#clr_know_us").css('visibility', 'hidden');
          }
      })
      $('.dataTables_filter ').css('display', 'none');

      $("#clr_country").css('visibility', 'hidden');
      $("#clr_zone").css('visibility', 'hidden');
      $("#clr_center").css('visibility', 'hidden');
      $("#clr_date_range").css('visibility', 'hidden');
      $("#clr_src_cat").css('visibility', 'hidden');
      $("#clr_stage").css('visibility', 'hidden');
      $("#clr_search").css('visibility', 'hidden');
      $("#clr_status").css('visibility', 'hidden');
      $("#clr_status").css('visibility', 'hidden');
      $("#clr_program").css('visibility', 'hidden');
      $("#clr_know_us").css('visibility', 'hidden');

      table.buttons().container().appendTo($('.excelexport'));

      $('input[name="date_range"]').daterangepicker({
        autoUpdateInput: false,
        startDate: moment().startOf('isoWeek'),
        endDate: moment().endOf('isoWeek'),
        ranges: {
            //- 'Yesterday':[moment().subtract(1, 'days'), moment().subtract(1, 'days')],
            'Last 7 days':[moment().subtract(7, 'days'), moment()],
            'Last 30 days':[moment().subtract(30, 'days'), moment()],
            'Overdue(All)':[moment().subtract(1825, 'days'), moment()],
            //- 'Tomorrow': [moment().add(1, 'days'), moment().add(1, 'days')],
            'Next 7 days':[moment(), moment().add(7, 'days')],
            'Next 30 days':[moment(), moment().add(30, 'days')],
            'Upcoming(All)':[moment(), moment().add(1825, 'days')],
            //- 'Someday':[moment().add(1, 'days'), moment().add(31, 'days')],
            //- 'Last 30 Days': [moment().subtract(29, 'days'), moment()],
            //- 'This Month': [moment().startOf('month'), moment().endOf('month')],
            //- 'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
          },
        locale: {
          cancelLabel: 'Clear'
        }
      }, cb);

      function cb (start, end) {
        $('input[name="date_range"]').val(start.format('MM/DD/YYYY') + ' - ' + end.format('MM/DD/YYYY'));
      }
      cb(moment().startOf('isoWeek'), moment().endOf('isoWeek'));

      $('input[name="date_range"]').on('apply.daterangepicker', function(ev, picker) {
          $(this).val(picker.startDate.format('YYYY/MM/DD') + ' - ' + picker.endDate.format('YYYY/MM/DD'));
          table
            .columns(4) // for start date
            .search(picker.startDate.format('YYYY/MM/DD')) // for start date
            .columns(5) // for end date
            .search(picker.endDate.format('YYYY/MM/DD')) // for end date
            .draw();
          $("#clr_date_range").css('visibility', 'visible');
      });

      $('input[name="date_range"]').on('cancel.daterangepicker', function(ev, picker) {
        $(this).val('');
        $("#clr_date_range").css('visibility', 'hidden');
      });
       //- selectpicker assignment
      $("#country").selectpicker({
        noneSelectedText : 'All'
      });
      $("#zone").selectpicker({
        noneSelectedText : 'All'
      });
      $("#center").selectpicker({
        noneSelectedText : 'All'
      });
      $("#source_category").selectpicker({
        noneSelectedText : 'All'
      });
      $("#stage").selectpicker({
        noneSelectedText : 'All'
      });
      $("#program").selectpicker({
        noneSelectedText : 'All'
      });
      $("#know_us").selectpicker({
        noneSelectedText : 'All'
      });
      $("#status").selectpicker({
        noneSelectedText : 'All'
      });
      $('#country').on('change', function () {
        $('#zone').val('');
        $('#center').val('');
        table
          .columns(0)
          .search(this.value)
          .draw();
        $("#clr_country").css('visibility', 'visible');
      });

      $('#clr_country').click(function (e) {
        $("#clr_country").css('visibility', 'hidden');
        $('#sel_country_check').prop('checked',false);
        $("#country").val(null).selectpicker();
        table
          .columns(0)
          .search("")
          .draw();
      })

      $('#zone').on('change', function () {
        $('#center').val('');
        table
          .columns(1)
          .search(this.value)
          .draw();
        $("#clr_zone").css('visibility', 'visible');
      });

      $('#clr_zone').click(function (e) {
        $("#clr_zone").css('visibility', 'hidden');
        $("#zone").val(null).selectpicker();
        table
          .columns(1)
          .search("")
          .draw();
      });

      $('#center').on('change', function () {
        let ceneterList = $("#center option").length;
        var valueLength = $(this).val() ? $(this).val().length : 0;
          if (ceneterList == valueLength) {
            $('#sel_center_check').prop('checked',true);
          } else {
            $('#sel_center_check').prop('checked',false);
          }

        table
          .columns(2)
          .search(this.value)
          .draw();
        $("#clr_center").css('visibility', 'visible');
      });

      $('#clr_center').click(function (e) {
        $("#clr_center").css('visibility', 'hidden');
        $('#sel_center_check').prop('checked',false);
        $("#center").val(null).selectpicker();
        table
          .columns(2)
          .search("")
          .draw();
      });

      $('#source_category').on('change', function () {
        table
          .columns(3)
          .search(this.value)
          .draw();
        $("#clr_src_cat").css('visibility', 'visible');
      });

      $('#clr_src_cat').click(function (e) {
        $("#clr_src_cat").css('visibility', 'hidden');
        $("#source_category").val(null).selectpicker();
        table
          .columns(3)
          .search("")
          .draw();
      });

      $('#date').on('change', function () {
        table
          .columns(4)
          .search(this.value)
          .draw();
        $("#clr_date_range").css('visibility', 'visible');
      });

      $("#clr_date_range").click(function (e) {
        $("#clr_date_range").css('visibility', 'hidden');
        //- $('#date').val('')
        cb(moment().startOf('isoWeek'), moment().endOf('isoWeek'));
        table
          .columns(4) // for start date
          .search("") // for start date
          .columns(5) // for end date
          .search("") // for end date
          .draw();
        //- $('input[name="date_range"]').on('cancel.daterangepicker', function(ev, picker) {
        //-   $(this).val('');
        //-   $("#clr_date_range").css('visibility', 'hidden');
        //- });
      });
      $('#stage').on('change', function () {
        //- $('#zone').val('');
        //- $('#center').val('');
        table
          .columns(6)
          .search(this.value)
          .draw();
        $("#clr_stage").css('visibility', 'visible');
      });

      $('#clr_stage').click(function (e) {
        $("#clr_stage").css('visibility', 'hidden');
        //- $('#sel_country_check').prop('checked',false);
        $("#stage").val(null).selectpicker();
        table
          .columns(6)
          .search("")
          .draw();
      })
      $('#status').on('change', function () {
        table
          .columns(7)
          .search(this.value)
          .draw();
        $("#clr_status ").css('visibility', 'visible');
      });

      $('#clr_status ').click(function (e) {
        $("#clr_status ").css('visibility', 'hidden');
        $('#sel_status_check').prop('checked',false);
        $("#status").val(null).selectpicker();
        table
          .columns(7)
          .search("")
          .draw();
      });
      $('#program').on('change', function () {
        let programsList = $("#program option").length;
        var id = $(this).val();
        var valueLength = $(this).val() ? $(this).val().length : 0;
          if (programsList == valueLength) {
            $('#sel_program_check').prop('checked',true);
          } else {
            $('#sel_program_check').prop('checked',false);
          }

        table
          .columns(8)
          .search(this.value)
          .draw();
        $("#clr_program").css('visibility', 'visible');
      });

      $('#clr_program').click(function (e) {
        $("#clr_program").css('visibility', 'hidden');
        $('#sel_program_check').prop('checked',false);
        $("#program").val(null).selectpicker();
        table
          .columns(8)
          .search("")
          .draw();
      });
      $('#searchbox').keyup(function(){
        table.search($(this).val()).draw();
        $("#clr_search").css('visibility', 'visible');
      });
      $('#know_us').on('change', function () {
        table
          .columns(9)
          .search(this.value)
          .draw();
        $("#clr_know_us").css('visibility', 'visible');
      });

      $('#clr_know_us').click(function (e) {
        $("#clr_know_us").css('visibility', 'hidden');
        $('#sel_know_check').prop('checked',false);
        $("#know_us").val(null).selectpicker();
        table
          .columns(9)
          .search("")
          .draw();
      });

      $('#clr_search').click(function (e) {
        $("#clr_search").css('visibility', 'hidden');
        $("#searchbox").val("");
        table.search("").draw();
      });

      let checkboxSome = document.getElementById("someday_1");
      checkboxSome.addEventListener( "change", () => {
        if (checkboxSome.checked) {
          //- alert('jeu')
          $("#country").selectpicker("deselectAll");
          $("#zone").selectpicker("deselectAll");
          $("#center").selectpicker("deselectAll");
          $("#program").selectpicker("deselectAll");
          $("#source_category").selectpicker("deselectAll");
          $("#know_us").selectpicker("deselectAll");
          $("#status").selectpicker("deselectAll");
          $("#stage").val(null).selectpicker("refresh");
          $("#searchbox").val("");
          $('#date').val('');
          $("#date").prop('disabled', true);
          $("#no_followup_1").prop('checked', false);
          table
            .columns(10)
            .search(checkboxSome.checked.toString())
            .draw();
        } else {
          table
            .columns(10)
            .search("")
            .draw();
        }
      });

      let checkbox = document.getElementById("no_followup_1");
      checkbox.addEventListener( "change", () => {
        if (checkbox.checked) {
          //- alert('checked');
          $("#country").selectpicker("deselectAll");
          $("#zone").selectpicker("deselectAll");
          $("#center").selectpicker("deselectAll");
          $("#program").selectpicker("deselectAll");
          $("#source_category").selectpicker("deselectAll");
          $("#know_us").selectpicker("deselectAll");
          $("#status").selectpicker("deselectAll");
          $("#stage").val(null).selectpicker("refresh");
          $("#searchbox").val("");
          $('#date').val('');
          $("#date").prop('disabled', true);
          $("#someday_1").prop('checked', false);
          table
            .columns(7)
            .search(checkbox.checked.toString())
            .draw();
        } else {
          $("#date").prop('disabled', false);
          //- alert('not checked')
          table
            .columns(7)
            .search("")
            .draw();
        }
      });

      $('#clear_filter').click(function() {
        window.location.reload();
        return;
      })
    });
    $(document).on('click','#show_filter', function(){
      //- console.log("clicked")
      $('.filter').slideToggle()
      //- $('.filter').show()
      //- $('#show_filter').hide()
    })
    function redirectToEditfollowup (followup_id) {
      window.location.href = `/admin/lead/edit/followup/${followup_id} `;
    }
    //- function redirectToEditleed (lead_id) {
    //-   window.location.href = `/admin/lead/edit/${lead_id}`;
    //- }
    function redirectToEditleed (lead_id) {
      console.log(lead_id,"lokoko")
      window.location.href = `/admin/lead/view/${lead_id}`;
    }
    function redirectToEditleed2 (lead_id) {
      window.location.href = `/admin/lead/add/followup/${lead_id}`;
    }
    function removeSelect() {
      $('#country option').prop("selected", false);
      $("#country").selectpicker("refresh")
    }
